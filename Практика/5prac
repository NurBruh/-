using System;
using System.Reflection.Metadata.Ecma335;

public interface IDocument 
{
    void Open();
}

public class Report : IDocument
{
    public void Open()
    {

        Console.WriteLine("Report open!");
    }

}

public class Resume : IDocument
{
    public void Open()
    {
        Console.WriteLine("Resume open!");    
    }

}

public class Letter : IDocument
{
    public void Open()
    {

        Console.WriteLine("Letter open!");
    }
}


public abstract class DocumentCreator
{
    public abstract IDocument CreateDocument();
    


}


public class ReportCreator : DocumentCreator
{
    public override IDocument CreateDocument()
    {
        return new Report();
    }

}

public class ResumeCreator : DocumentCreator 
{
    public override IDocument CreateDocument()
    {
        return new Resume();
    }
}

public class LetterCreator : DocumentCreator 
{
    public override IDocument CreateDocument()
    {
        return new Letter();
    }
}

public enum DocType 
{ 
    Report, Resume, Letter, Invoice
}

public class Invoice : IDocument 
{
    public void Open()
    {

        Console.WriteLine("Invoice open!");
    }
}

public class InvoiceCreator : DocumentCreator
{
    public override IDocument CreateDocument()
    {
        return new Invoice();
    }
}

internal class Program 
{

    static void Main(string[] args)
    {
        GetDocument(DocType.Report).Open();
        GetDocument(DocType.Resume).Open();
        GetDocument(DocType.Letter).Open();
        GetDocument(DocType.Invoice).Open();
        Console.WriteLine("Type document: ");
        string userInput = Console.ReadLine();

        
        if (Enum.TryParse(userInput, true, out DocType docType))
        {
            IDocument document = GetDocument(docType);
            document.Open();
        }
        else
        {
            Console.WriteLine("ERROR 500");
        }
    }
    public static IDocument GetDocument(DocType docType)
    {
        DocumentCreator creator = null;
        IDocument document = null;


        switch (docType)
        {
            case DocType.Report:
                creator = new ReportCreator();
                document = creator.CreateDocument();
                break;
            case DocType.Resume:
                creator = new ResumeCreator();
                document = creator.CreateDocument();
                break;
            case DocType.Letter:
                creator = new LetterCreator();
                document = creator.CreateDocument();
                break;
            case DocType.Invoice:
                creator = new InvoiceCreator();
                document = creator.CreateDocument();
                break;
            default:
                throw new Exception("KCAS EXPLOADED!");
        }
        return document;
    }
}
